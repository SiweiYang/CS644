#!/usr/bin/env bash

which nasm > /dev/null
if [ $? -ne 0 ]; then
  echo "Install 'nasm' through your package manager."
  exit 1
fi

mkdir output &>/dev/null
make

function joosc_run {
  rm output/* &> /dev/null
  ./joosc `find $1 | grep "\.java$"` assignment_testcases/stdlib2/*.java
  status=$?
  if [ $status -ne 0 ]; then
    echo "Compiler exit code: $status"
  else
    for f in output/*
    do
      nasm -O1 -f elf -g -F dwarf $f
    done
    nasm -O1 -f elf -g -F dwarf -o output/runtime.o assignment_testcases/stdlib2/runtime.s
    ld -melf_i386 -o output/main output/*.o
    ./output/main
    echo "Executable exit code: $?"
  fi
}
export -f joosc_run

function run_test {
  rm output/* &> /dev/null
  ./joosc $1 assignment_testcases/stdlib2/*.java 2>/dev/null
  status=$?
  if [ $status -ne 0 ]; then
    echo "$1 (Compiler exited with: $status)"
  else
    run_assembler $1
  fi
}
export -f run_test

function run_test_dir {
  rm output/* &> /dev/null
  ./joosc `find $1 -type f` assignment_testcases/stdlib2/*.java 2>/dev/null
  status=$?
  if [ $status -ne 0 ]; then
    echo "$1 (Compiler exited with: $status)"
  else
    run_assembler $1
  fi
}
export -f run_test_dir

function run_assembler {
  rm output/*.o
  for f in output/*.s
  do
    nasm -O1 -f elf -g -F dwarf $f
  done
  nasm -O1 -f elf -g -F dwarf -o output/runtime.o assignment_testcases/stdlib2/runtime.s
  ld -melf_i386 -o output/main output/*.o
  ./output/main
  status=$?
  if [ $status -ne 123 ]; then
    echo "$1 (Executable exited with: $status)"
  fi
}
export -f run_assembler


echo "Running tests..."
echo "Failures:"

echo "Positive Single File"
for file in $( echo assignment_testcases/a5/J[!e]*.java ); do
    run_test ${file}
done

echo "Positive Folder"
for dir in $( ls -d assignment_testcases/a5/J[!e]*/ ); do
    run_test_dir $dir
done
